{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vm1Name": {
      "type": "string",
      "defaultValue": "web1-vm",
      "metadata": {
        "description": "Enter a name for your first web VM"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_E2s_v3",
      "metadata": {
        "description": "Choose a size for your VMs."
      }
    },
    "vmAdminUser": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "Enter a username for accessing your VMs."
      }
    },
    "vmAdminPassword": {
      "type": "securestring",
      "defaultValue": "Morg@nMorg@n",
      "metadata": {
        "description": "Enter the password for accessing your VMs."
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "MorganLabs-vnet",
      "metadata": {
        "description": "Enter a name for your shared VNet."
      }
    },
    "vnetAddressSpace": {
      "type": "string",
      "defaultValue": "10.240.0.0/16",
      "metadata": {
        "description": "Choose an address space for your VNet."
      }
    },
    "vnetSubnetName": {
      "type": "string",
      "defaultValue": "Server-SN",
      "metadata": {
        "description": "Enter a name for the subnet to be created in your VNet."
      }
    },
    "vnetSubnetSpace": {
      "type": "string",
      "defaultValue": "10.240.1.0/24",
      "metadata": {
        "description": "Enter an address space for your subnet (within the VNet)."
      }
    },
    "nsgName": {
      "type": "string",
      "defaultValue": "MorganLabs-nsg",
      "metadata": {
        "description": "Enter a name for the NSG that will protect your VNet."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "dnsResourceGroup": {
      "type": "string",
      "defaultValue": "DNS-RG",
      "metadata": {
        "description": "Resource group where the DNS zone resides"
      }
    },
    "dnsZoneName": {
      "type": "string",
      "defaultValue": "morganlabs.site",
      "metadata": {
        "description": "DNS zone name"
      }
    },
    "dnsRecordName": {
      "type": "string",
      "defaultValue": "@",
      "metadata": {
        "description": "DNS record name (e.g. '@' for root)"
      }
    }
  },
  "variables": {
    "vm1NicName": "[format('{0}-nic1', parameters('vm1Name'))]",
    "vm1IpName": "[format('{0}-ip', parameters('vm1Name'))]",
    "dnsLabelPrefixVM1": "[toLower(format('{0}-{1}', parameters('vm1Name'), uniqueString(resourceGroup().id, parameters('vm1Name'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-11-01",
      "name": "[parameters('nsgName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "allow-inbound-rdp",
            "properties": {
              "description": "Allows RDP inbound from all source addresses (should lock this down!)",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1100,
              "direction": "Inbound"
            }
          },
          {
            "name": "allow-inbound-http",
            "properties": {
              "description": "Allows HTTP inbound from all source addresses (should lock this down!)",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2019-11-01",
      "name": "[parameters('vnetName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressSpace')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('vnetSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('vnetSubnetSpace')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2019-11-01",
      "name": "[variables('vm1IpName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsLabelPrefixVM1')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "name": "[variables('vm1NicName')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('vm1IpName'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('vnetSubnetName'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('vm1IpName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2020-12-01",
      "name": "[parameters('vm1Name')]",
      "location": "[parameters('location')]",
      "dependsOn": [
    "[resourceId('Microsoft.Network/networkInterfaces', 'web1-vm-nic1')]"]
      ,
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vm1Name')]",
          "adminUsername": "[parameters('vmAdminUser')]",
          "adminPassword": "[parameters('vmAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2022-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "[format('{0}-disk', parameters('vm1Name'))]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vm1NicName'))]"
            }
          ]
        }
      }
    },
    {
  "type": "Microsoft.Compute/virtualMachines/extensions",
  "name": "[concat(parameters('vm1Name'), '/installGitNet')]",
  "apiVersion": "2021-03-01",
  "location": "[resourceGroup().location]",
  "dependsOn": [
    "[resourceId('Microsoft.Compute/virtualMachines', parameters('vm1Name'))]"
  ],
  "properties": {
    "publisher": "Microsoft.Compute",
    "type": "CustomScriptExtension",
    "typeHandlerVersion": "1.9",
    "autoUpgradeMinorVersion": true,
    "settings": {
      "fileUris": [
        "https://raw.githubusercontent.com/morganlabs-code/Azure-DeployWebServer/main/GitNetInstall.ps1"
      ],
      "commandToExecute": "powershell -ExecutionPolicy Unrestricted -File GitNetInstall.ps1"
    }
  }
}
,
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "dnsRecordDeployment",
      "resourceGroup": "[parameters('dnsResourceGroup')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vm1Name'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "https://raw.githubusercontent.com/morganlabs-code/Azure-DeployWebServer/main/dns-record.json",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "dnsZoneName": {
            "value": "[parameters('dnsZoneName')]"
          },
          "recordName": {
            "value": "[parameters('dnsRecordName')]"
          },
          "ipv4Address": {
            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('vm1IpName'))).ipAddress]"
          }
        }
      }
    }
  ]
}

